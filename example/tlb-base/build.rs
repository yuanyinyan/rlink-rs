use serbuffer_gen::{Codegen, DataType::*};

fn main() {
    Codegen::new("src/buffer_gen", "TlbBase")
        .field("timestamp", U64)
        .field("app_id", STRING)
        .field("client_app_uk", STRING)
        .field("region", STRING)
        .field("env", STRING)
        .field("logical_idc", STRING)
        .field("status", STRING)
        .field("host", STRING)
        .field("request_method", STRING)
        .field("request_uri", STRING)
        .field("up_addr", STRING)
        .field("is_rule", BOOL)
        .field("upstream_name", STRING)
        .field("data_source", STRING)
        .field("app_uk_parse_type", STRING)
        .field("bytes_recv_sum", I64)
        .field("bytes_recv_1k", I64)
        .field("bytes_recv_4k", I64)
        .field("bytes_recv_16k", I64)
        .field("bytes_recv_64k", I64)
        .field("bytes_recv_256k", I64)
        .field("bytes_recv_1m", I64)
        .field("bytes_recv_3m", I64)
        .field("bytes_recv_more", I64)
        .field("bytes_send_sum", I64)
        .field("bytes_send_1k", I64)
        .field("bytes_send_4k", I64)
        .field("bytes_send_16k", I64)
        .field("bytes_send_64k", I64)
        .field("bytes_send_256k", I64)
        .field("bytes_send_1m", I64)
        .field("bytes_send_3m", I64)
        .field("bytes_send_more", I64)
        .field("sum_request_time", I64)
        .field("sum_response_time", I64)
        .field("count_100ms", I64)
        .field("count_300ms", I64)
        .field("count_500ms", I64)
        .field("count_1s", I64)
        .field("count_3s", I64)
        .field("count_5s", I64)
        .field("count_slow", I64)
        .field("sum_2xx", I64)
        .field("sum_3xx", I64)
        .field("sum_4xx", I64)
        .field("sum_5xx", I64)
        .field("time_2xx", I64)
        .field("time_3xx", I64)
        .field("time_4xx", I64)
        .field("time_5xx", I64)
        .field("count", I64)
        .gen()
        .expect("buffer gen error");
}
